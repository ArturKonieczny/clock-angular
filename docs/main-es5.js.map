{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.interfaces.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.root.reducer.ts","webpack:///src/app/clock/actions/clock.actions.ts","webpack:///src/app/clock/clock.module.ts","webpack:///src/app/clock/clock.routing.ts","webpack:///src/app/clock/components/analog-clock/analog-clock.component.ts","webpack:///src/app/clock/components/analog-clock/analog-clock.component.html","webpack:///src/app/clock/components/date/date.component.ts","webpack:///src/app/clock/components/date/date.component.html","webpack:///src/app/clock/components/digital-clock/digital-clock.component.ts","webpack:///src/app/clock/components/digital-clock/digital-clock.component.html","webpack:///src/app/clock/containers/clock-container/clock-container.component.ts","webpack:///src/app/clock/containers/clock-container/clock-container.component.html","webpack:///src/app/clock/effects/clock.effects.ts","webpack:///src/app/clock/pipes/analog-angle.pipe.ts","webpack:///src/app/clock/pipes/hours-time-format.pipe.ts","webpack:///src/app/clock/pipes/make-digits.pipe.ts","webpack:///src/app/clock/pipes/weekdays.pipe.ts","webpack:///src/app/clock/reducers/clock.reducer.ts","webpack:///src/app/clock/services/clock.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","HOURS_COUNT","AppModule","forRoot","declarations","imports","providers","bootstrap","reducers","clock","UPDATE_TIME","SET_TIME","UPDATE_DATE","SET_DATE","UpdateTimeAction","type","SetTimeAction","payload","UpdateDateAction","SetDateAction","ClockModule","routes","path","component","ClockRouting","AnalogClockComponent","clockService","changes","time","analogTime","convertToAnalog","currentValue","styleUrls","DateComponent","DigitalClockComponent","timeFormat","hoursCount","ClockContainerComponent","store","clockType","currentTime$","select","state","currentTime","currentDate$","currentDate","timerSubscription","subscribe","dispatch","unsubscribe","ClockEffects","actions$","updateTime$","pipe","getTime","updateDate$","getDate","AnalogAnglePipe","value","WebkitTransform","MozTransform","MsTransform","OTransform","Transform","name","HoursTimeFormatPipe","format","MakeDigitsPipe","count","stringValue","String","length","WeekdaysPipe","weekdaysDict","initialState","reducer","action","ClockService","SEC_MIN_ADJUST","HOURS_ADJUST","HOURS_MIN_ADJUST","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","day","month","getMonth","year","getFullYear","weekDay","getDay","providedIn","environment","production","bootstrapModule","err","console","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","<router-outlet></router-outlet>\n","import { Action } from '@ngrx/store';\r\n\r\nexport interface OptionalPayloadAction extends Action {\r\n  payload?: any;\r\n}\r\n\r\nexport const HOURS_COUNT = 12;\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ClockModule } from './clock/clock.module';\nimport { ClockEffects } from './clock/effects/clock.effects';\nimport { reducers } from './app.root.reducer';\n\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ClockModule,\r\n    RouterModule,\r\n    StoreModule.forRoot(reducers),\r\n    EffectsModule.forRoot([\r\n      ClockEffects,\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [\r\n    AppComponent\r\n  ],\r\n})\r\nexport class AppModule { }\r\n","import { ActionReducerMap } from '@ngrx/store';\r\n\r\nimport * as fromClock from './clock/reducers/clock.reducer';\r\n\r\nexport interface State {\r\n  clock: fromClock.State;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  clock: fromClock.reducer,\r\n};\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { OptionalPayloadAction } from '../../app.interfaces';\r\nimport { CurrentDate, CurrentTime } from '../models/clock.interfaces';\r\n\r\nexport const UPDATE_TIME = '[Clock] Update Time';\r\nexport const SET_TIME = '[Clock] Set Time';\r\nexport const UPDATE_DATE = '[Clock] Update Date';\r\nexport const SET_DATE = '[Clock] Set Date';\r\n\r\nexport class UpdateTimeAction implements Action {\r\n  type = UPDATE_TIME;\r\n}\r\n\r\nexport class SetTimeAction implements OptionalPayloadAction {\r\n  type = SET_TIME;\r\n\r\n  constructor(public payload: CurrentTime) { }\r\n}\r\n\r\nexport class UpdateDateAction implements Action {\r\n  type = UPDATE_DATE;\r\n}\r\n\r\nexport class SetDateAction implements OptionalPayloadAction {\r\n  type = SET_DATE;\r\n\r\n  constructor(public payload: CurrentDate) { }\r\n}\r\n\r\nexport type Actions =\r\n  UpdateTimeAction\r\n  | SetTimeAction\r\n  | UpdateDateAction\r\n  | SetDateAction\r\n  ;\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AnalogClockComponent } from './components/analog-clock/analog-clock.component';\nimport { ClockContainerComponent } from './containers/clock-container/clock-container.component';\nimport { ClockRouting } from './clock.routing';\nimport { DigitalClockComponent } from './components/digital-clock/digital-clock.component';\nimport { HoursTimeFormatPipe } from './pipes/hours-time-format.pipe';\nimport { MakeDigitsPipe } from './pipes/make-digits.pipe';\nimport { AnalogAnglePipe } from './pipes/analog-angle.pipe';\nimport { WeekdaysPipe } from './pipes/weekdays.pipe';\nimport { DateComponent } from './components/date/date.component';\n\n@NgModule({\n  declarations: [\n    ClockContainerComponent,\n    DigitalClockComponent,\n    AnalogClockComponent,\n    HoursTimeFormatPipe,\n    MakeDigitsPipe,\n    AnalogAnglePipe,\n    WeekdaysPipe,\n    DateComponent,\n  ],\n  imports: [\n    ClockRouting,\n    CommonModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class ClockModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ClockContainerComponent } from './containers/clock-container/clock-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ClockContainerComponent,\r\n  },\r\n];\r\n\r\nexport const ClockRouting = RouterModule.forRoot(routes);\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { CurrentTime } from '../../models/clock.interfaces';\r\nimport { ClockService } from '../../services/clock.service';\r\n\r\n@Component({\r\n  selector: 'app-analog-clock',\r\n  templateUrl: './analog-clock.component.html',\r\n  styleUrls: ['./analog-clock.component.scss']\r\n})\r\nexport class AnalogClockComponent implements OnChanges {\r\n  public analogTime: CurrentTime;\r\n\r\n  @Input() time: CurrentTime;\r\n\r\n  constructor(\r\n    private clockService: ClockService,\r\n  ) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.time) {\r\n      this.analogTime = this.clockService.convertToAnalog(changes.time.currentValue);\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"time\">\r\n  <div class=\"shield\">\r\n    <img src=\"assets/shield.png\" />\r\n  </div>\r\n  <div class=\"hours\" [ngStyle]=\"analogTime.hours | analogAngle\">\r\n    <img src=\"assets/hours.png\" />\r\n  </div>\r\n  <div class=\"minutes\" [ngStyle]=\"analogTime.minutes | analogAngle\">\r\n    <img src=\"assets/minutes.png\" />\r\n  </div>\r\n  <div class=\"seconds\" [ngStyle]=\"analogTime.seconds | analogAngle\">\r\n    <img src=\"assets/seconds.png\" />\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\n\nimport { CurrentDate } from '../../models/clock.interfaces';\n@Component({\n  selector: 'app-date',\n  templateUrl: './date.component.html',\n})\nexport class DateComponent {\n  @Input() date: CurrentDate;\n}\n","<div *ngIf=\"date\">\n  <span>\n    {{ date.day | makeDigits }}.{{ date.month | makeDigits }}.{{ date.year | makeDigits:4 }}\n    {{ date.weekDay | weekdays }}\n  </span>\n</div>\n","import { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { CurrentTime } from '../../models/clock.interfaces';\r\nimport { HOURS_COUNT } from '../../../app.interfaces';\r\n\r\n@Component({\r\n  selector: 'app-digital-clock',\r\n  templateUrl: './digital-clock.component.html',\r\n})\r\n\r\nexport class DigitalClockComponent {\r\n  public timeFormat = new FormControl('24h');\r\n  public hoursCount = HOURS_COUNT;\r\n\r\n  @Input() time: CurrentTime;\r\n}\r\n","<div *ngIf=\"time\">\r\n  <span>\r\n    {{ time.hours | hoursTimeFormat:timeFormat.value | makeDigits }}:{{ time.minutes | makeDigits }}\r\n    {{ time.seconds | makeDigits }}\r\n  </span>\r\n  <span *ngIf=\"timeFormat.value !== '24h'\">\r\n    {{ time.hours < hoursCount ? 'am' : 'pm' }}\r\n  </span>\r\n</div>\r\n<div>\r\n  <select [formControl]=\"timeFormat\">\r\n    <option value=\"24h\">\r\n      24h\r\n    </option>\r\n    <option value=\"ampm\">\r\n      AM/PM\r\n    </option>\r\n  </select>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription, timer } from 'rxjs';\r\n\r\nimport { State } from '../../../app.root.reducer';\r\nimport { CurrentTime, CurrentDate } from '../../models/clock.interfaces';\r\nimport { UpdateDateAction, UpdateTimeAction } from '../../actions/clock.actions';\r\n\r\n@Component({\r\n  selector: 'app-clock-container',\r\n  templateUrl: './clock-container.component.html',\r\n})\r\nexport class ClockContainerComponent implements OnDestroy, OnInit {\r\n  public clockType = new FormControl('digital');\r\n  public currentTime$: Observable<CurrentTime>;\r\n  public currentDate$: Observable<CurrentDate>;\r\n  private timerSubscription: Subscription;\r\n\r\n  constructor(\r\n    private store: Store<State>,\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.currentTime$ = this.store.select(state => state.clock.currentTime);\r\n    this.currentDate$ = this.store.select(state => state.clock.currentDate);\r\n\r\n    this.timerSubscription = timer(0, 500).subscribe(() => {\r\n      this.store.dispatch(new UpdateTimeAction());\r\n      this.store.dispatch(new UpdateDateAction());\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.timerSubscription.unsubscribe();\r\n  }\r\n}\r\n","<app-date [date]=\"currentDate$ | async\">\r\n</app-date>\r\n<div>\r\n  <select [formControl]=\"clockType\">\r\n    <option value=\"digital\">\r\n      Digital\r\n    </option>\r\n    <option value=\"analog\">\r\n      Analog\r\n    </option>\r\n  </select>\r\n</div>\r\n<app-digital-clock\r\n  *ngIf=\"clockType.value === 'digital'\"\r\n  [time]=\"currentTime$ | async\">\r\n</app-digital-clock>\r\n<app-analog-clock\r\n  *ngIf=\"clockType.value === 'analog'\"\r\n  [time]=\"currentTime$ | async\">\r\n</app-analog-clock>\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport * as clockActions from '../actions/clock.actions';\r\nimport { ClockService } from '../services/clock.service';\r\n\r\n@Injectable()\r\nexport class ClockEffects {\r\n\r\n  @Effect()\r\n  updateTime$: Observable<clockActions.Actions> = this.actions$.pipe(\r\n    ofType(clockActions.UPDATE_TIME),\r\n    map(() => new clockActions.SetTimeAction(this.clockService.getTime())),\r\n  );\r\n\r\n  @Effect()\r\n  updateDate$: Observable<clockActions.Actions> = this.actions$.pipe(\r\n    ofType(clockActions.UPDATE_DATE),\r\n    map(() => new clockActions.SetDateAction(this.clockService.getDate())),\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private clockService: ClockService,\r\n  ) { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'analogAngle'\n})\nexport class AnalogAnglePipe implements PipeTransform {\n  transform(value: number): any {\n    return {\n      WebkitTransform: `rotate(${value}deg)`,\n      MozTransform: `rotate(${value}deg)`,\n      MsTransform: `rotate(${value}deg)`,\n      OTransform: `rotate(${value}deg)`,\n      Transform: `rotate(${value}deg)`\n    };\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { TimeFormat } from '../models/clock.interfaces';\nimport { HOURS_COUNT } from '../../app.interfaces';\n\n@Pipe({\n  name: 'hoursTimeFormat'\n})\nexport class HoursTimeFormatPipe implements PipeTransform {\n  transform(value: number, format: TimeFormat): number {\n    if (format === '24h') {\n      return value;\n    }\n\n    return value > HOURS_COUNT ? value - HOURS_COUNT : value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'makeDigits'\n})\nexport class MakeDigitsPipe implements PipeTransform {\n  transform(value: number, count: number = 2): string {\n    let stringValue = String(value);\n\n    while (stringValue.length < count) {\n      stringValue = `0${stringValue}`;\n    }\n\n    return stringValue;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'weekdays'\n})\nexport class WeekdaysPipe implements PipeTransform {\n  private weekdaysDict = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  transform(value: number): string {\n    return this.weekdaysDict[value] ||  this.weekdaysDict[0];\n  }\n}\n","import * as clockActions from '../actions/clock.actions';\r\nimport { CurrentDate, CurrentTime } from '../models/clock.interfaces';\r\nimport { OptionalPayloadAction } from '../../app.interfaces';\r\n\r\nexport interface State {\r\n  currentTime: CurrentTime | null;\r\n  currentDate: CurrentDate | null;\r\n}\r\n\r\nexport const initialState: State = {\r\n  currentTime: null,\r\n  currentDate: null,\r\n};\r\n\r\n\r\nexport function reducer(state = initialState, action: OptionalPayloadAction): State {\r\n  switch (action.type) {\r\n\r\n    case clockActions.SET_TIME:\r\n      return {\r\n        ...state,\r\n        currentTime: (action as clockActions.SetTimeAction).payload,\r\n      } as State;\r\n\r\n    case clockActions.SET_DATE:\r\n      return {\r\n        ...state,\r\n        currentDate: (action as clockActions.SetDateAction).payload,\r\n      } as State;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { CurrentDate, CurrentTime } from '../models/clock.interfaces';\nimport { HOURS_COUNT } from '../../app.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClockService {\n  private SEC_MIN_ADJUST = 6;\n  private HOURS_ADJUST = 30;\n  private HOURS_MIN_ADJUST = 0.5;\n\n  public getTime(): CurrentTime {\n    const currentDate = new Date();\n\n    return {\n      hours: currentDate.getHours(),\n      minutes: currentDate.getMinutes(),\n      seconds: currentDate.getSeconds(),\n    };\n  }\n\n  public getDate(): CurrentDate {\n    const currentDate = new Date();\n\n    return {\n      day: currentDate.getDate(),\n      month: currentDate.getMonth() + 1,\n      year: currentDate.getFullYear(),\n      weekDay: currentDate.getDay(),\n    };\n  }\n\n  public convertToAnalog(time: CurrentTime) {\n    const seconds = time.seconds * this.SEC_MIN_ADJUST;\n    const minutes = time.minutes * this.SEC_MIN_ADJUST;\n    const hours = this.HOURS_ADJUST * (time.hours % HOURS_COUNT) + time.minutes * this.HOURS_MIN_ADJUST;\n\n    return { seconds, minutes, hours };\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}